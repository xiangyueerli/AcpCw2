services:
  kafka:
    image: apache/kafka-native
    networks:
      - acp_network
    ports:
      - "9092:9092"          # 主机访问
      - "9093:9093"          # 如需外部连 Docker 监听
    environment:
      # Configure listeners for both docker and host communication
      KAFKA_LISTENERS: CONTROLLER://0.0.0.0:9091,HOST://0.0.0.0:9092,DOCKER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: HOST://localhost:9092,DOCKER://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT,HOST:PLAINTEXT

      # Settings required for KRaft mode
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9091

      # Listener to use for broker-to-broker communication
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER

      # Required for a single node cluster
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  rabbitmq:
    image: rabbitmq:4.0-management
    networks:
      - acp_network
    ports:
      - "5672:5672"
      - "15672:15672"

  redis:
    image: redis/redis-stack:latest    # 包含 RedisServer + RedisInsight UI
    container_name: redis              # 等价于 --name redis
    ports:
      - "6379:6379"                    # Redis 协议
      - "8001:8001"                    # RedisInsight Web UI → http://localhost:8001
    networks:
      - acp_network                    # 或 default，看你前面的设置
    volumes:
      - redis_data:/data               # 数据持久化（可选，但强烈建议）
    restart: unless-stopped            # 容器异常退出自动重启（等价 --restart）

  app:                                 # rename 'main' → 更易懂
    build: .
    networks: [acp_network]
    depends_on: [kafka, redis, rabbitmq]
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9093   # 示例
      REDIS_HOST: redis
      RABBITMQ_HOST: rabbitmq
    ports:
      - "8080:8080"

networks:
  acp_network:

volumes:
  redis_data:                          # 命名卷，Compose 会自动创建
